<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/swift/2021/04/18/hello-world/"/>
      <url>/swift/2021/04/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a class="header-anchor" href="#Quick-Start">¶</a>Quick Start</h2><h3 id="Create-a-new-post"><a class="header-anchor" href="#Create-a-new-post">¶</a>Create a new post</h3><pre class=" language-language-bash"><code class="language-language-bash">$ hexo new "My New Post"</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a class="header-anchor" href="#Run-server">¶</a>Run server</h3><pre class=" language-language-bash"><code class="language-language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a class="header-anchor" href="#Generate-static-files">¶</a>Generate static files</h3><pre class=" language-language-bash"><code class="language-language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a class="header-anchor" href="#Deploy-to-remote-sites">¶</a>Deploy to remote sites</h3><pre class=" language-language-bash"><code class="language-language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多线程与高并发学习笔记（一）</title>
      <link href="/swift/2020/04/05/thread/"/>
      <url>/swift/2020/04/05/thread/</url>
      
        <content type="html"><![CDATA[<h1>java内存模型</h1><p>作用：jmm是一种规范，它规范了jvm是如何与计算机内存协同工作的，它规定了一个线程如何和何时能看到其它线程修改过的共享变量的值，以及在必须时如何同步的访问共享变量</p><h2 id="堆"><a class="header-anchor" href="#堆">¶</a>堆</h2><p>运行时的数据区，优势是可以动态分配内存大小，垃圾回收器可以自动收走不在需要的数据。缺点是由于需要动态分配内存，存取的速度较慢</p><h2 id="栈"><a class="header-anchor" href="#栈">¶</a>栈</h2><p>存取速度快，仅次于计算机里的寄存器，栈的数据可以共享。缺点是存储数据的大小是确定的，缺乏灵活性。栈中存储了基本数据类型变量，如int，short, long,  float, double,char,byte, boolean</p><p><img src="http://47.103.107.233:8088/hexo/image-20200229160121072.png" alt="image-20200229160121072"></p><p><img src="http://47.103.107.233:8088/hexo/image-20200229160331686.png" alt="image-20200229160331686"></p><h1>并发的优势与风险</h1><p><img src="http://47.103.107.233:8088/hexo/image-20200229161133437.png" alt="image-20200229161133437"></p><h1>多线程</h1><p>线程安全性：当多个线程访问某个类时，不管运行时环境采用<strong>何种调度方式</strong>或者这些进程将如何交替执行，并且在主调代码中<strong>不需要任何额外的同步或协同</strong>，这个类都能表现出<strong>正确的行为</strong>，那么就称这个类是线程安全的。</p><ul><li>原子性：提供了互斥访问，同一时刻只能有一个线程来对它进行操作</li></ul><p><img src="http://47.103.107.233:8088/hexo/image-20200229184042558.png" alt="image-20200229184042558"></p><p>CAS算法：比较和交换 在Atomic包里用法较多，比如AtomicInteger的incrementAndGet方法</p><p>调用了Unsafe类里的native方法getAndAddInt</p><pre class=" language-language-java"><code class="language-language-java">public final int getAndAddInt(Object var1, long var2, int var4) {        int var5;        do {            var5 = this.getIntVolatile(var1, var2);        } while(!this.compareAndSwapInt(var1, var2, var5, var5 + var4));    //通过getIntVolatile方法获取var1对象的变量在主存中的最新值var5与var2相比较，如过相同才会执行相加操作，不相同会继续读取在主存中的值        return var5;    }</code></pre><ul><li>可见性：一个线程对主内存的修改可以及时的被其他线程观察到</li></ul><p><img src="http://47.103.107.233:8088/hexo/image-20200229184442326.png" alt="image-20200229184442326"></p><p><img src="http://47.103.107.233:8088/hexo/image-20200229184731544.png" alt="image-20200229184731544"></p><p><img src="http://47.103.107.233:8088/hexo/image-20200229184709974.png" alt="image-20200229184709974"></p><p>应用场景：</p><p><img src="http://47.103.107.233:8088/hexo/image-20200229185347816.png" alt="image-20200229185347816"></p><ul><li><p>有序性：一个线程观察其它线程中的指令执行顺序，由于指令重排序的存在，该观察结果一般杂乱无序</p><p><img src="http://47.103.107.233:8088/hexo/image-20200229190220735.png" alt="image-20200229190220735"></p><hr></li></ul><p><img src="http://47.103.107.233:8088/hexo/image-20200229185840173.png" alt="image-20200229185840173"></p><hr><p><img src="http://47.103.107.233:8088/hexo/image-20200229185915892.png" alt="image-20200229185915892"></p><hr><p><img src="http://47.103.107.233:8088/hexo/image-20200229190005066.png" alt="image-20200229190005066"></p><h2 id="安全发布对象"><a class="header-anchor" href="#安全发布对象">¶</a>安全发布对象</h2><p><img src="http://47.103.107.233:8088/hexo/image-20200302110803490.png" alt="image-20200302110803490"></p>]]></content>
      
      
      <categories>
          
          <category> java多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用MarkDown编辑器写博客</title>
      <link href="/swift/2020/02/22/shi-yong-markdown-bian-ji-qi/"/>
      <url>/swift/2020/02/22/shi-yong-markdown-bian-ji-qi/</url>
      
        <content type="html"><![CDATA[<h1>使用MarkDown写下我的第一篇博客</h1><h2 id="标题"><a class="header-anchor" href="#标题">¶</a>标题</h2><h2 id="段落格式"><a class="header-anchor" href="#段落格式">¶</a>段落格式</h2><p>段落的换行使用两个空格加回车<br><em>斜体文字</em><br><em>粗体文字</em><br>下面有一个分割线</p><hr><p><s>这段文字有删除线</s></p><p><u>使用u标签为文本添加下划线</u></p><h2 id="列表"><a class="header-anchor" href="#列表">¶</a>列表</h2><ol><li>使用“+”来分点</li></ol><ul><li>第一点</li><li>第二点</li><li>第三点</li></ul><ol start="2"><li>第二项<br>创建脚注<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><br>hexo本身是不支持脚标的，这里我使用了hexo-renderer-markdown-it这个插件</li></ol><h2 id="区块使用"><a class="header-anchor" href="#区块使用">¶</a>区块使用</h2><blockquote><p>使用“&gt;”、“&gt;&gt;”、“&gt;&gt;&gt;”来为区块分级</p><blockquote><p>第二级</p><blockquote><p>第三级</p></blockquote></blockquote></blockquote><h2 id="代码块"><a class="header-anchor" href="#代码块">¶</a>代码块</h2><p>使用“<code>[语言（可选）]      </code>”</p><pre class=" language-language-java"><code class="language-language-java">public class markdown{public static void main(args[] String){System.out.print("这是一段java代码");}}</code></pre><h2 id="外部链接"><a class="header-anchor" href="#外部链接">¶</a>外部链接</h2><p>使用“[链接名称]  (链接地址)”<br>这是一个链接<a href="http://47.103.107.233:8090" target="_blank" rel="noopener">毕业设计地址</a></p><h2 id="添加图片"><a class="header-anchor" href="#添加图片">¶</a>添加图片</h2><p>使用“![图片的替代文字]  (图片链接 “title”)”<br><img src="http://47.103.107.233:8088/111/timg.jpg" alt="迪丽热巴" title="迪丽热巴"></p><h2 id="使用表格"><a class="header-anchor" href="#使用表格">¶</a>使用表格</h2><table><thead><tr><th style="text-align:left">姓名</th><th style="text-align:right">年龄</th><th style="text-align:center">性别</th></tr></thead><tbody><tr><td style="text-align:left">陈世哲</td><td style="text-align:right">22</td><td style="text-align:center">男</td></tr><tr><td style="text-align:left">郑奇奇</td><td style="text-align:right">22</td><td style="text-align:center">男</td></tr></tbody></table><p>使用“|”隔开每一列<br>“|—|”用来区分表头与表体<br>“|:—:|”为居中<br>“|:—|”为居左<br>“|—:|”为居右</p><h2 id="插入流程图、时序图、甘特图等"><a class="header-anchor" href="#插入流程图、时序图、甘特图等">¶</a>插入流程图、时序图、甘特图等</h2><p>在typora中画好后将源码粘贴至编辑器</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>码出未来 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
